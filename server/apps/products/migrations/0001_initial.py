# Generated by Django 5.1.5 on 2025-05-30 12:47

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.core.validators
import django.db.models.deletion
import mptt.fields
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        db_index=True, max_length=255, verbose_name="Название"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=255, unique=True, verbose_name="Slug"
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="products.category",
                        verbose_name="Родительская категория",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория",
                "verbose_name_plural": "Категории",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Время создания записи.",
                        verbose_name="Дата создания",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Время последнего обновления записи.",
                        verbose_name="Дата обновления",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Название")),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=255, unique=True, verbose_name="Slug"
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                        verbose_name="Цена",
                    ),
                ),
                (
                    "discount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Скидка",
                    ),
                ),
                ("stock", models.PositiveIntegerField(default=0, verbose_name="Запас")),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True,
                        default="images/products/default.png",
                        upload_to="images/products/%Y/%m/%d",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "jpeg", "png", "webp", "gif"]
                            )
                        ],
                        verbose_name="Миниатюра",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=False, verbose_name="Активен"),
                ),
                (
                    "search_vector",
                    django.contrib.postgres.search.SearchVectorField(
                        blank=True, null=True, verbose_name="Поисковый вектор"
                    ),
                ),
                (
                    "popularity_score",
                    models.FloatField(default=0.0, verbose_name="Популярность"),
                ),
                (
                    "category",
                    mptt.fields.TreeForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="products.category",
                        verbose_name="Категория",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Товар",
                "verbose_name_plural": "Товары",
                "ordering": ["-created"],
            },
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(fields=["title"], name="products_ca_title_80a91b_idx"),
        ),
        migrations.AddIndex(
            model_name="category",
            index=django.contrib.postgres.indexes.HashIndex(
                fields=["slug"], name="products_ca_slug_b1d2be_hash"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["title"], name="products_pr_title_7d8124_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["-created"], name="products_pr_created_1360ea_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["is_active"], name="products_pr_is_acti_ca4d9a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["search_vector"], name="products_pr_search__98d711_gin"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["price"], name="products_pr_price_9b1a5f_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["discount"], name="products_pr_discoun_0fa1d1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["stock"], name="products_pr_stock_4d23d5_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["popularity_score"], name="products_pr_popular_26b74b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["title", "category"], name="title_category_idx"),
        ),
    ]
